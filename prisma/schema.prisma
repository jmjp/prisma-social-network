// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id         Int      @id @default(autoincrement())
  username   String   @unique()
  email      String   @unique()
  password   String?
  avatar     String?
  provider   Provider @default(LOCAL)
  confirmed  Boolean  @default(false)
  blocked    Boolean  @default(false)
  posts      post[]
  followedBy user[]   @relation("relationship", references: [id])
  following  user[]   @relation("relationship", references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt()
  token      token[]
}

model post {
  id        Int      @id @unique() @default(autoincrement())
  content   String
  author    user     @relation(fields: [authorId], references: [id])
  authorId  Int
  postId    Int?     
  post      post?    @relation("comments", fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  comments  post[]   @relation("comments")
  media     media[]
  tags      tags[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model media {
  id        Int      @id @default(autoincrement())
  url       String
  post      post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId    Int
  views     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model tags {
  id        Int      @id @default(autoincrement())
  name      String   @unique()
  posts     post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model token {
  id     Int    @id @default(autoincrement())
  token  String @unique()
  user   user   @relation(fields: [userId], references: [id])
  userId Int    @unique()
}

enum Provider {
  FACEBOOK
  GOOGLE
  GITHUB
  LOCAL
}
